version: 2.1

orbs:
  node: circleci/node@4.7.0

executors:
  ruby:
    working_directory: ~/repo
    docker:
      - image: cimg/ruby:2.7.2-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: postgres
          PGPASS: postgres
      - image: circleci/postgres:13-ram
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

jobs:
  generate:
    executor: ruby
    steps:
      - node/install:
          install-yarn: true
          install-npm: false
          node-version: "16.13.0"
      - checkout
      - restore_cache:
          name: Restore yarn cache
          keys:
            - yarn-v2-{{ arch }}
      - run:
          name: Install bundler
          command: |
            gem install bundler --no-document
            bundle config path $HOME/vendor/bundle
      - restore_cache:
          name: Restore bundler cache
          keys:
            - bundle-v2-{{ arch }}
      - run:
          name: Install railties
          command: |
            gem install railties --version "~> 6.1.0" --no-document
      - run:
          name: Configure git
          command: |
            git config --global user.name "Circle CI"
            git config --global user.email ci@example.com
      - run:
          name: Generate app from template
          command: |
            mkdir -p $HOME/scratch
            cd $HOME/scratch
            rails new ci_example -d postgresql -m $HOME/repo/template.rb \<< INPUT
              ci.example.com

            INPUT
      - run:
          name: Clean bundler
          command: |
            cd $HOME/scratch/ci_example && bundle clean
      - save_cache:
          name: Save bundler cache
          paths:
            - ../vendor/bundle
          key: bundle-v2-{{ arch }}-{{ checksum "../scratch/ci_example/Gemfile.lock" }}
      - save_cache:
          name: Save yarn cache
          paths:
            - ../.cache/yarn
          key: yarn-v2-{{ arch }}-{{ checksum "../scratch/ci_example/yarn.lock" }}

workflows:
  version: 2
  commit-workflow:
    jobs:
      - generate
  cron-workflow:
    triggers:
      - schedule:
          cron: "0 13 * * 6"
          filters:
            branches:
              only:
                - main
    jobs:
      - generate
